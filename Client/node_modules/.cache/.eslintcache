[{"/Volumes/backup/traveller_mate/traveller_mate/Client/src/index.js":"1","/Volumes/backup/traveller_mate/traveller_mate/Client/src/App.js":"2","/Volumes/backup/traveller_mate/traveller_mate/Client/src/serviceWorker.js":"3","/Volumes/backup/traveller_mate/traveller_mate/Client/src/utils/auth.js":"4","/Volumes/backup/traveller_mate/traveller_mate/Client/src/pages/Content.js":"5","/Volumes/backup/traveller_mate/traveller_mate/Client/src/components/Landing/Login.js":"6","/Volumes/backup/traveller_mate/traveller_mate/Client/src/utils/mutations.js":"7"},{"size":468,"mtime":1676078481149,"results":"8","hashOfConfig":"9"},{"size":1195,"mtime":1676079043821,"results":"10","hashOfConfig":"9"},{"size":5099,"mtime":1676080884064,"results":"11","hashOfConfig":"9"},{"size":1015,"mtime":1676077781228,"results":"12","hashOfConfig":"9"},{"size":0,"mtime":1676078608606,"results":"13","hashOfConfig":"9"},{"size":2792,"mtime":1676079278516,"results":"14","hashOfConfig":"9"},{"size":2561,"mtime":1676077781228,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"r7vq2p",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"19"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Volumes/backup/traveller_mate/traveller_mate/Client/src/index.js",[],[],[],"/Volumes/backup/traveller_mate/traveller_mate/Client/src/App.js",["41","42"],[],"import React from \"react\";\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport Auth from \"./utils/auth\";\n\nimport Home from \"./pages/Content\";\n// import Detail from \"./pages/Detail\";\n// import NoMatch from \"./pages/NoMatch\";\nimport Login from \"./components/Landing/Login\";\nimport Signup from \"./components/Landing/Login\";\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem(\"id_token\");\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : \"\",\n      },\n    });\n  },\n  uri: \"/graphql\",\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <nav className=\"navbar bg-dark d-flex w-100\">\n        <h1 className=\"p-3 text-light text-center ml\">Traveller Mate</h1>\n        {Auth.loggedIn() && (\n          <button\n            className=\"btn-primary bg-dark  justify-content-center p-2 \"\n            onClick={Auth.logout}\n          >\n            Logout\n          </button>\n        )}\n      </nav>\n      <Home />\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Volumes/backup/traveller_mate/traveller_mate/Client/src/serviceWorker.js",[],[],"/Volumes/backup/traveller_mate/traveller_mate/Client/src/utils/auth.js",["43"],[],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","/Volumes/backup/traveller_mate/traveller_mate/Client/src/pages/Content.js",[],[],"/Volumes/backup/traveller_mate/traveller_mate/Client/src/components/Landing/Login.js",["44"],[],"import React, { useState } from \"react\";\nimport { Form, Button, Message, Modal, Input } from \"semantic-ui-react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN } from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth\";\nimport \"./login.css\";\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  // set loginUser as mutation\n  const [loginUser, loginError] = useMutation(LOGIN);\n\n  const [isLoading, setLoading] = useState(false);\n\n  const [showAlert, setShowAlert] = useState(false);\n  // using error to show alert, check only when there's an error\n  // useEffect(() => {\n  //     if (error) setShowAlert(true);\n  //     else setShowAlert(false);\n  // }, [loginError]);\n\n  const [open, setOpen] = useState(false); // For Modal\n\n  const inlineStyle = {\n    modal: {\n      height: \"auto\",\n      top: \"auto\",\n      left: \"auto\",\n      bottom: \"auto\",\n      right: \"auto\",\n      width: \"305px\",\n    },\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const response = await loginUser({\n        variables: { ...userFormData },\n      });\n\n      const token = response.data.login.token;\n      // console.log(token);\n      Auth.login(token);\n      setOpen(false);\n    } catch (err) {\n      setLoading(false);\n      setShowAlert(true);\n    }\n  };\n  const handleInput = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      style={inlineStyle.modal}\n      trigger={<Button className=\"btn-cust\"> Login</Button>}\n    >\n      <Modal.Content>\n        <Form loading={isLoading}>\n          <div className=\"form-heading\">\n            <h1>Login</h1>\n          </div>\n\n          <Form.Field\n            control={Input}\n            label=\"Username\"\n            name=\"username\"\n            onChange={handleInput}\n            placeholder=\"Username\"\n          />\n          <Form.Field\n            control={Input}\n            label=\"Password\"\n            name=\"password\"\n            type={\"password\"}\n            onChange={handleInput}\n            placeholder=\"Password\"\n          />\n          {showAlert ? (\n            <Message\n              negative\n              header=\"Bad Request\"\n              content=\"Please check your creditials\"\n            />\n          ) : (\n            <></>\n          )}\n          <Form.Field\n            fluid\n            control={Button}\n            color={\"blue\"}\n            onClick={handleSubmit}\n          >\n            Submit\n          </Form.Field>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default LoginForm;\n","/Volumes/backup/traveller_mate/traveller_mate/Client/src/utils/mutations.js",[],[],{"ruleId":"45","severity":1,"message":"46","line":10,"column":8,"nodeType":"47","messageId":"48","endLine":10,"endColumn":13},{"ruleId":"45","severity":1,"message":"49","line":11,"column":8,"nodeType":"47","messageId":"48","endLine":11,"endColumn":14},{"ruleId":"50","severity":1,"message":"51","line":45,"column":1,"nodeType":"52","endLine":45,"endColumn":34},{"ruleId":"45","severity":1,"message":"53","line":15,"column":21,"nodeType":"47","messageId":"48","endLine":15,"endColumn":31},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Signup' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'loginError' is assigned a value but never used."]